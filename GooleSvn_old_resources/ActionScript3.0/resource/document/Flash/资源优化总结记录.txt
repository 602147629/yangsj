一、请牢记以下注意事项：

	1、避免在矢量形状上使用轮廓。轮廓包含一个内边缘和一个外边缘（填充只有一个边缘），因此要对其渲染两次。

	2、对角进行渲染要比曲线简单得多。如果可能，请使用平滑边缘（特别是非常小的矢量形状）。

	3、优化对于小矢量形状（如图标）特别有用。复杂图标可能会在渲染时丢失细节，并浪费渲染细节的工作。

	4、一条通用规则是，对较小的复杂图像（如图标）使用位图；较大的简单图像使用矢量图形。

	5、按照正确的大小导入位图图形；不要导入较大的图形并在 Flash 中将它们缩小，因为这会浪费文件大小和运行时内存。

	6、Flash Lite 播放器不支持位图平滑。如果对位图进行缩放或旋转，它将具有短粗形外观。如果必须对图形进行缩放或旋转，可以考虑改为使用矢量图形。 

	7、文本实质上是一种非常复杂的矢量形状。当然，文本通常很重要，因此很少能够完全避免使用文本。如果必须使用文本，则应避免制作动画文本或将其放在动画上方。考虑将文本用作位图。对于多行动态和输入文本，将不会对文本字符串的换行符进行缓存。Flash 会在运行时换行，并在每次需要重新绘制文本域时重新计算换行次数。静态文本域不会有问题，因为在编译时已预先对换行进行了计算。对于动态内容，使用动态文本域是不可避免的，但是如果可能，应考虑改为使用静态文本域。

	8、在 PNG 文件中应尽可能减少对透明度的使用；Flash 甚至必须计算对位图的透明部分进行的重绘。例如，对于表示前景元素的透明 PNG 文件，不要按照屏幕的完全大小导出透明 PNG， 而应按照前景元素的实际大小将其导出。

	9、尝试分别将位图图层和矢量图层组合在一起。Flash 需要为位图和矢量内容执行不同的渲染器，而在渲染器之间进行切换需要花费一定的时间。


优化图形和动画
在创建经过优化和简化的动画或图形之前，应对项目进行概括和计划。 为文件大小和动画长度制定一个目标，并在整个开发过程中对目标进行测试。 

遵循下列图形和动画优化准则：
避免使用渐变，因为它们要求对多种颜色和计算进行处理，计算机处理器完成这些操作的难度较大。 

出于同样的原因，应使 SWF 文件中使用的 Alpha 或透明度数量保持在最低限度。

包含透明度的动画对象会占用大量处理器资源，因此必须将其保持在最低限度。 位图之上的动画透明图形是一种尤其会占用大量处理器资源的动画，因此必须将其保持在最低限度，或完全避免使用它。

注： PNG 是可导入 Flash 中的最佳位图格式，它是 Adobe 推出的 Macromedia Fireworks 的本地文件格式。 PNG 文件具有每个像素的 RGB 和 Alpha 信息。 如果您将一个 Fireworks PNG 文件导入 Flash，您将保留在 FLA 文件中编辑该图形对象的部分能力。
优化位图时不要对其进行过度压缩。 72 dpi 的分辨率最适合 Web 使用。 压缩位图图像可减小文件大小，但过度的压缩将损害图像质量。 请检查“发布设置”对话框中的 JPEG 品质设置，确保未过度压缩图像。 在大多数情况下，将图像表示为矢量图形要更可取。 使用矢量图像可以减小文件大小，因为是通过计算（而非通过许多像素）产生出图像。 在保持图像质量的同时限制图像中的颜色数量。 

注： 避免将位图缩放到比其原始尺寸更大的大小，因为这将降低图像的品质，并占用大量处理器资源。
将 _visible 属性设置为 false ，而不是将 SWF 文件中的 _alpha 级别更改为 0 或 1。 计算舞台上实例的 _alpha 级别将占用大量处理器资源。 如果禁用实例的可见性，可以节省 CPU 周期和内存，从而使您的 SWF 文件的动画更加平滑。 您无需卸载和重新加载资源，只需将 _visible 属性设置为 false，这样可减少对处理器资源的占用。

减少在 SWF 文件中使用的线条和点的数量。 使用“最优化曲线”对话框（“修改”>“形状”>“优化”）来减少绘图中的矢量数量。 选择“使用多重过渡”选项来执行更多优化。 优化图形将减小文件大小，但过度压缩图形将损害其品质。 但是，优化曲线可减小文件大小并提高 SWF 文件性能。 可采用第三方选项来对产生不同结果的曲线和点进行专门优化。

若要取得最佳结果，可尝试采取不同的方式生成动画内容，并对各种方式进行测试。

在 SWF 文件中，较高的帧频（以每秒帧数或者说 fps 为单位进行衡量）将生成平滑的动画，但它可能占用大量处理器资源，尤其是在较旧的计算机上。 以不同的帧频对动画进行测试，以找到尽可能低的帧频。


